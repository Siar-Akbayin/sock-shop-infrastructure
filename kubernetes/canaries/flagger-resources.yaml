# source: https://github.com/stefanprodan/gitops-istio/blob/main/istio/system/flagger.yaml
apiVersion: source.toolkit.fluxcd.io/v1beta1
kind: HelmRepository
metadata:
  name: flagger
  namespace: istio-system
spec:
  interval: 1h0m0s
  url: https://flagger.app
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: flagger
  namespace: istio-system
spec:
  chart:
    spec:
      chart: flagger
      sourceRef:
        kind: HelmRepository
        name: flagger
  interval: 1h0m0s
  releaseName: flagger
  install:
    crds: Create
  upgrade:
    crds: CreateReplace
  values:
    meshProvider: istio
    metricsServer: http://prometheus.istio-system:9090
    includeLabelPrefix: app
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: flagger-grafana
  namespace: istio-system
spec:
  chart:
    spec:
      chart: grafana
      sourceRef:
        kind: HelmRepository
        name: flagger
  interval: 1h0m0s
  releaseName: flagger-grafana
  values:
    url: http://prometheus.istio-system:9090
---
apiVersion: v1
kind: Service
metadata:
  name: flagger-loadtester
  namespace: sock-shop
  labels:
    app: flagger-loadtester
spec:
  type: ClusterIP
  selector:
    app: flagger-loadtester
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flagger-loadtester
  namespace: sock-shop
  labels:
    app: flagger-loadtester
spec:
  selector:
    matchLabels:
      app: flagger-loadtester
  template:
    metadata:
      labels:
        app: flagger-loadtester
      annotations:
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: loadtester
          image: weaveworks/flagger-loadtester:0.13.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
          command:
            - ./loadtester
            - -port=8080
            - -log-level=info
            - -timeout=1h
          livenessProbe:
            exec:
              command:
                - wget
                - --quiet
                - --tries=1
                - --timeout=4
                - --spider
                - http://localhost:8080/healthz
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - wget
                - --quiet
                - --tries=1
                - --timeout=4
                - --spider
                - http://localhost:8080/healthz
            timeoutSeconds: 5
          resources:
            limits:
              memory: "512Mi"
              cpu: "1000m"
            requests:
              memory: "32Mi"
              cpu: "10m"
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 10001
---
apiVersion: flagger.app/v1beta1
kind: AlertProvider
metadata:
  name: on-call
  namespace: flux-system
spec:
  type: discord
  channel: flagger-bot
  username: flagger-bot
  secretRef:
    name: discord-flagger-webhook
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: front-end
  namespace: sock-shop
spec:
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: front-end
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 600
  # HPA reference (optional)
  autoscalerRef:
    apiVersion: autoscaling/v2beta1
    kind: HorizontalPodAutoscaler
    name: front-end
  service:
    # container port
    port: 8079
    portName: http
    # Istio gateways (optional)
    gateways:
      - istio-system/public-gateway
    # Istio virtual service host names (optional)
    hosts:
      #     - front-end.transparent-sock-shop.de
      - "*"
    trafficPolicy:
      tls:
        # use ISTIO_MUTUAL when mTLS is enabled
        mode: ISTIO_MUTUAL
  analysis:
    # schedule interval (default 60s)
    interval: 30s
    # max number of failed metric checks before rollback
    threshold: 25
    # precentage before complete rollout
    maxWeight: 70
    # 10% steps
    stepWeight: 10
    # promotion increment step (default 100)
    stepWeightPromotion: 100
    # canary match condition
    #    match:
    #      - headers:
    #          user-agent:
    #            regex: ".*Firefox.*"
    #            #regex: "^(?!.*(?:Chrome|Edge)).*Safari"
    #      - headers:
    #          cookie:
    #            regex: "^(.*?;)?(type=insider)(;.*)?$"
    # Istio Prometheus checks
    alerts:
      - name: "on-call Discord"
        severity: info
        providerRef:
          name: on-call
          namespace: flux-system
    metrics:
      - name: request-success-rate
        interval: 1m
        thresholdRange:
          min: 80
      - name: request-duration
        interval: 1m
        thresholdRange:
          max: 1000
      - name: error-rate
        templateRef:
          name: error-rate
          namespace: istio-system
        thresholdRange:
          max: 10
        interval: 30s
      - name: latency
        templateRef:
          name: latency
          namespace: istio-system
        thresholdRange:
          max: 500
        interval: 30s
    webhooks:
      - name: conformance-test
        type: pre-rollout
        timeout: 15s
        url: http://flagger-loadtester.sock-shop/
        metadata:
          type: bash
          cmd: "curl -sd 'test' http://front-end-canary.sock-shop:8079/token | grep token"
      - name: load-test
        type: rollout
        timeout: 15s
        url: http://flagger-loadtester.sock-shop/
        metadata:
          type: cmd
          cmd: "hey -z 1m -q 10 -c 2 http://front-end.sock-shop:8079/"
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: front-end
  namespace: sock-shop
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: front-end
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        # scale up if usage is above
        # 99% of the requested CPU (100m)
        targetAverageUtilization: 99
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: orders
  namespace: sock-shop
spec:
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: orders
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 600
  # HPA reference (optional)
  autoscalerRef:
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    name: orders
  service:
    # container port
    port: 80
    trafficPolicy:
      tls:
        # use ISTIO_MUTUAL when mTLS is enabled
        mode: DISABLE
  analysis:
    # schedule interval (default 60s)
    interval: 30s
    # max number of failed metric checks before rollback
    threshold: 25
    # precentage before complete rollout
    maxWeight: 50
    # 10% steps
    stepWeight: 10
    # promotion increment step (default 100)
    stepWeightPromotion: 100

    alerts:
      - name: "on-call Discord"
        severity: info
        providerRef:
          name: on-call
          namespace: flux-system
    #Built in Flagger metrics
  #    metrics:
  #      - name: request-success-rate
  #        templateRef:
  #          name: request-success-rate
  #          namespace: istio-system
  #        interval: 1m
  #        thresholdRange:
  #          min: 90
  #      - name: request-duration
  #        templateRef:
  #          name: request-duration
  #          namespace: istio-system
  #        interval: 1m
  #        thresholdRange:
  #          max: 1000
  skipAnalysis: false #svc does not get traffic since other services like carts are not available
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: orders
  namespace: sock-shop
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: orders
  minReplicas: 1
  maxReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        # scale up if usage is above
        # 99% of the requested CPU (100m)
        targetAverageUtilization: 99
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: payment
  namespace: sock-shop
spec:
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: payment
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 600
  # HPA reference (optional)
  autoscalerRef:
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    name: payment
  service:
    # container port
    port: 80
  analysis:
    # schedule interval (default 60s)
    interval: 30s
    # max number of failed metric checks before rollback
    threshold: 10
    # precentage before complete rollout
    maxWeight: 50
    # 10% steps
    stepWeight: 10
    # promotion increment step (default 100)
    stepWeightPromotion: 100

    alerts:
      - name: "on-call Discord"
        severity: info
        providerRef:
          name: on-call
          namespace: flux-system
      #Built in Flagger metrics
      #    webhooks:
      #gate waits for status code 200 from an url. If it gets 403, rollout
      #will be blocked (could be used by the controller in the dashboard)
  #      - name: "gate"
  #            type: confirm-rollout
  #            url: http://flagger-loadtester.test/gate/halt

  #      - name: flagger-loadtester
  #        url: http://34.159.190.137/
  #        timeout: 5s
  #        metadata:
  #          type: cmd
  #        cmd: ["-c", "while true; do locust --host http://34.159.153.79/ -f /config/locustfile.py --clients 5 --hatch-rate 5 --num-request 100 --no-web; done"]

  #    metrics:
  #     - name: request-success-rate
  #      templateRef:
  #         name: request-success-rate
  #         namespace: istio-system
  #       interval: 1m
  #       thresholdRange:
  #         min: 90
#      - name: request-duration
#        templateRef:
#          name: request-duration
#          namespace: istio-system
#        interval: 1m
#        thresholdRange:
#          max: 1000
#  skipAnalysis: false #svc does not get traffic since other services like carts are not available
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: payment
  namespace: sock-shop
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: payment

  minReplicas: 1
  maxReplicas: 4

  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 90
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: shipping
  namespace: sock-shop
spec:
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shipping
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 600
  # HPA reference (optional)
  autoscalerRef:
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    name: shipping
  service:
    name: shipping
    # container port
    port: 80
  analysis:
    # schedule interval (default 60s)
    interval: 30s
    # max number of failed metric checks before rollback
    threshold: 10
    # precentage before complete rollout
    maxWeight: 50
    # 10% steps
    stepWeight: 10
    # promotion increment step (default 100)
    stepWeightPromotion: 100

    alerts:
      - name: "on-call Discord"
        severity: info
        providerRef:
          name: on-call
          namespace: flux-system
    #Built in Flagger metrics
#    metrics:
#      - name: request-success-rate
#        interval: 1m
#        thresholdRange:
#          min: 90
#      - name: request-duration
#        interval: 1m
#        thresholdRange:
#          max: 1000
#      - name: error-rate
#        templateRef:
#          name: error-rate
#          namespace: istio-system
#        thresholdRange:
#          max: 1
#        interval: 30s
#      - name: latency
#        templateRef:
#          name: latency
#          namespace: istio-system
#        thresholdRange:
#          max: 500
#        interval: 30s
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: shipping
  namespace: sock-shop
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: shipping
  minReplicas: 1
  maxReplicas: 4
  metrics:
    - type: Resource
      resource:
        name: cpu
        # scale up if usage is above
        # 99% of the requested CPU (100m)
        targetAverageUtilization: 99
---
apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: catalogue
  namespace: sock-shop
spec:
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: catalogue
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 600
  # HPA reference (optional)
  autoscalerRef:
    apiVersion: autoscaling/v2beta2
    kind: HorizontalPodAutoscaler
    name: catalogue
  service:
    name: catalogue
    # container port
    port: 80
    targetPort: 8080
    trafficPolicy:
      tls:
        # use ISTIO_MUTUAL when mTLS is enabled
        mode: ISTIO_MUTUAL
  analysis:
    # schedule interval (default 60s)
    interval: 30s
    # max number of failed metric checks before rollback
    threshold: 25
    # precentage before complete rollout
    maxWeight: 70
    # 10% steps
    stepWeight: 10
    # promotion increment step (default 100)
    stepWeightPromotion: 100

    alerts:
      - name: "on-call Discord"
        severity: info
        providerRef:
          name: on-call
          namespace: flux-system
      #Built in Flagger metrics
      #    webhooks:
      #gate waits for status code 200 from an url. If it gets 403, rollout
      #will be blocked (could be used by the controller in the dashboard)
  #      - name: "gate"
  #            type: confirm-rollout
  #            url: http://flagger-loadtester.test/gate/halt

  #      - name: load-test
  #        url: http://34.159.190.137/
  #        timeout: 5s
  #        metadata:
  #          type: cmd
  #        cmd: ["-c", "while true; do locust --host http://34.159.153.79/ -f /config/locustfile.py --clients 5 --hatch-rate 5 --num-request 100 --no-web; done"]

  #    metrics:
  #      - name: request-success-rate
  #        templateRef:
  #          name: request-success-rate
  #          namespace: istio-system
  #        interval: 1m
  #        thresholdRange:
  #          min: 90
  #      - name: request-duration
  #        templateRef:
  #          name: request-duration
  #          namespace: istio-system
  #        interval: 1m
  #        thresholdRange:
  #          max: 5000
  skipAnalysis: false
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: catalogue
  namespace: sock-shop
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: catalogue

  minReplicas: 1
  maxReplicas: 4

  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 90
